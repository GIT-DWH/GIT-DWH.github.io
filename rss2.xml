<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>天之界</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>踏一步便是虚无</description>
    <pubDate>Sun, 18 Mar 2018 12:14:23 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Codeforces911D---Inversion Counting</title>
      <link>http://yoursite.com/2018/03/16/Codeforces911D---Inversion%20Counting/</link>
      <guid>http://yoursite.com/2018/03/16/Codeforces911D---Inversion%20Counting/</guid>
      <pubDate>Fri, 16 Mar 2018 13:46:12 GMT</pubDate>
      <description>
      
        &lt;hr&gt;
      
      </description>
      
      <content:encoded><![CDATA[<hr><a id="more"></a><h2 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h2><p>给你$n$个数，和$m$个操作询问，每个询问给你$l,r$两个数，问你反转$l,r$区间的元素后，整个序列的逆序对的个数是奇数个还是偶数个，奇数个输出$odd$,偶数个则输出$even$,该逆序对以从小到大为标准次序，反转后不会恢复为原序列，且保证n个数中每个数都不相同。</p><p>##数据范围：<br>$1 \leq n \leq 1500,1 \leq m \leq 2 \cdot 10^5,1 \leq l_i \leq r_i \leq n,1 \leq a_i \leq n;$</p><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p>因为要求每次操作后逆序对的对数的奇偶性，如果想暴力做的话，每次对序列进行反转就是$O(n)$的复杂度，还得重新求总逆序对个数，总复杂度就变为了$O(n^{2}\cdot{m})$，这显然会$TLE$的，所以得换个想法，我们先求出初始序列的总逆序对个数$res$，根据$[l,r]$区间逆序对的变化转换为总逆序对个数，但是真正的个数我们其实并不太需要，只需要知道奇偶性就行了；我们知道一个长度为len长的序列，它的逆序对最多为$len\cdot(len-1)/2$(假如该序列为从大到小排序，即总逆序对个数为($1+2+3+\dots+(len-1)=len\cdot(len-1)/2$)暂且称为满逆序对,那么现逆序对个数即与满逆序对个数有关，若满逆序对个数为偶数个，那么现逆序对奇偶性与原逆序对相同，即为加减偶数个数，可以用$len\cdot(len-1)/2$代替，否则当满逆序对个数为奇数个时，那么现逆序对奇偶性与原逆序对相反，即为加减奇数个，也可用$len\cdot(len-1)/2$代替，所以每次只需要将$res+=len\cdot(len-1)/2$后就可以直接判断奇偶性，$O(1)$出答案。</p><p>##AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1500</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, cnt;</span><br><span class="line"><span class="keyword">int</span> a[maxn + <span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span>(a[i] &gt; a[j])cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;l, &amp;r);</span><br><span class="line">cnt += (r - l + <span class="number">1</span>) * (r - l) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt &amp; <span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"odd\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"even\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目链接：Go-to"><a href="#题目链接：Go-to" class="headerlink" title="题目链接：Go to!"></a>题目链接：<a href="http://codeforces.com/problemset/problem/911/D" target="_blank" rel="noopener">Go to!</a></h2>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/16/Codeforces911D---Inversion%20Counting/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://yoursite.com/2018/03/16/HELLO%20WORLD/</link>
      <guid>http://yoursite.com/2018/03/16/HELLO%20WORLD/</guid>
      <pubDate>Fri, 16 Mar 2018 09:25:09 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>http://yoursite.com/2018/03/16/HELLO%20WORLD/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
