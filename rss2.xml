<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>天之界</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>踏一步便是虚无</description>
    <pubDate>Sat, 15 Sep 2018 15:20:22 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>后缀数组-出现次数大于等于k次的子串种类(String and Times)</title>
      <link>http://yoursite.com/2018/09/15/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84-%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8Ek%E6%AC%A1%E7%9A%84%E5%AD%90%E4%B8%B2%E7%A7%8D%E7%B1%BB(String%20and%20Times)/</link>
      <guid>http://yoursite.com/2018/09/15/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84-%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8Ek%E6%AC%A1%E7%9A%84%E5%AD%90%E4%B8%B2%E7%A7%8D%E7%B1%BB(String%20and%20Times)/</guid>
      <pubDate>Sat, 15 Sep 2018 15:00:56 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/113/10/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/113/10/thumb.jpg" alt="img"></p><a id="more"></a><h2 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h2><p><a href="https://nanti.jisuanke.com/t/31717" target="_blank" rel="noopener">https://nanti.jisuanke.com/t/31717</a></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>给你一个字符串 $S$ ，问字符串 $S$ 中有多少种子串出现（可重叠）次数在 $[A,B]$ ？</p><h2 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h2><p>$input$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AAA 2 3</span><br><span class="line">ABAB 2 2</span><br></pre></td></tr></table></figure><p>$output$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="数据范围："><a href="#数据范围：" class="headerlink" title="数据范围："></a>数据范围：</h2><ul><li><p>$∑length(S)≤2×106$</p></li><li><p>$1 \le A \le B \le length(S)$</p></li><li>单组字符串长度不超过 $1e5$</li></ul><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p>答案 $=$ 出现次数大于等于 $A$ 次的种类 - 出现次数大于 $B$ 次的种类</p><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w[maxn], r[maxn * <span class="number">2</span>], cnt[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> root,last;</span><br><span class="line"><span class="keyword">int</span> all;  <span class="comment">//总结点</span></span><br><span class="line"><span class="keyword">int</span> l;  <span class="comment">//字符串长度</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sam_node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> fa,son[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> _len)</span></span>&#123;</span><br><span class="line">len = _len;</span><br><span class="line">fa = <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">memset</span>(son,<span class="number">-1</span>,<span class="keyword">sizeof</span>(son));</span><br><span class="line">&#125;</span><br><span class="line">&#125;t[maxn * <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sam_init</span><span class="params">()</span></span>&#123;</span><br><span class="line">all = <span class="number">0</span>;</span><br><span class="line">root = last = <span class="number">0</span>;</span><br><span class="line">t[all].init(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p = last;</span><br><span class="line"><span class="keyword">int</span> np = ++all;</span><br><span class="line">t[all].init(t[p].len + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> q,nq;</span><br><span class="line"><span class="keyword">while</span>(p != <span class="number">-1</span> &amp;&amp; t[p].son[w] == <span class="number">-1</span>)&#123;</span><br><span class="line">t[p].son[w] = np;</span><br><span class="line">p = t[p].fa;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p == <span class="number">-1</span>) t[np].fa = root;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">q = t[p].son[w];</span><br><span class="line"><span class="keyword">if</span>(t[p].len + <span class="number">1</span> == t[q].len) t[np].fa = q;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">nq = ++all;</span><br><span class="line">t[nq].init(<span class="number">0</span>);</span><br><span class="line">t[nq] = t[q];</span><br><span class="line">t[nq].len = t[p].len + <span class="number">1</span>;</span><br><span class="line">t[q].fa = nq;</span><br><span class="line">t[np].fa = nq;</span><br><span class="line"><span class="keyword">while</span>(p != <span class="number">-1</span> &amp;&amp; t[p].son[w] == q)&#123;</span><br><span class="line">t[p].son[w] = nq;</span><br><span class="line">p = t[p].fa;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">last = np;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= l; ++i) w[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= all; ++i) w[t[i].len]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= l; ++i) w[i] += w[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = all; i &gt;= <span class="number">1</span>; --i) r[w[t[i].len]--] = i;</span><br><span class="line">r[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, A, B, p;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s %d %d"</span>,&amp;s,&amp;A,&amp;B))&#123;</span><br><span class="line"><span class="keyword">int</span> tl = <span class="built_in">strlen</span>(s);</span><br><span class="line">l = <span class="number">0</span>;</span><br><span class="line">sam_init();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tl; ++i)&#123;</span><br><span class="line">++l;</span><br><span class="line">s[i] = s[i] + <span class="number">32</span>; <span class="comment">// 这里规定输入的字符只有大写字母。</span></span><br><span class="line">extend(s[i] - <span class="string">'a'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= all; ++i) cnt[i] = <span class="number">0</span>;</span><br><span class="line">Solve();</span><br><span class="line">p = root;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l; ++i)&#123;</span><br><span class="line">p = t[p].son[s[i] - <span class="string">'a'</span>];</span><br><span class="line">cnt[p]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = all; i &gt;= <span class="number">1</span>; --i)&#123;</span><br><span class="line">p = r[i];</span><br><span class="line"><span class="keyword">if</span>(t[p].fa != <span class="number">-1</span>)&#123;</span><br><span class="line">cnt[t[p].fa] += cnt[p];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">LL ans1 = <span class="number">0</span>, ans2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= all; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(cnt[i] &gt;= A) ans1 += t[i].len-t[t[i].fa].len; <span class="comment">// 计算出现次数大于等于A的种类</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= all; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(cnt[i] &gt; B) ans2 += t[i].len-t[t[i].fa].len; <span class="comment">// 计算出现次数大于B的种类</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans1 - ans2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/09/15/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84-%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8Ek%E6%AC%A1%E7%9A%84%E5%AD%90%E4%B8%B2%E7%A7%8D%E7%B1%BB(String%20and%20Times)/#disqus_thread</comments>
    </item>
    
    <item>
      <title>SG函数模板</title>
      <link>http://yoursite.com/2018/09/12/SG%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF/</link>
      <guid>http://yoursite.com/2018/09/12/SG%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF/</guid>
      <pubDate>Wed, 12 Sep 2018 13:37:05 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/109/9/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/109/9/thumb.jpg" alt="img"></p><a id="more"></a><h2 id="模板一："><a href="#模板一：" class="headerlink" title="模板一："></a>模板一：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//f[]：可以取走的石子个数</span></span><br><span class="line"><span class="comment">//sg[]:0~n的SG函数值</span></span><br><span class="line"><span class="comment">//hash[]:mex&#123;&#125;</span></span><br><span class="line"><span class="keyword">int</span> f[K],sg[N],hash[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSG</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(sg,<span class="number">0</span>,<span class="keyword">sizeof</span>(sg));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">                <span class="built_in">memset</span>(hash,<span class="number">0</span>,<span class="keyword">sizeof</span>(hash));</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; f[j]&lt;=i &amp;&amp; j &lt; k; j++) <span class="comment">//k是f[]的有效长度</span></span><br><span class="line">                        hash[sg[i-f[j]]]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; ; j++) &#123;   <span class="comment">//求mes&#123;&#125;中未出现的最小的非负整数</span></span><br><span class="line">                        <span class="keyword">if</span>(hash[j]==<span class="number">0</span>) &#123;</span><br><span class="line">                                sg[i]=j;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模板二："><a href="#模板二：" class="headerlink" title="模板二："></a>模板二：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意 S数组要按从小到大排序 SG函数要初始化为-1 对于每个集合只需初始化1遍</span></span><br><span class="line"><span class="comment">//n是集合s的大小 S[i]是定义的特殊取法规则的数组</span></span><br><span class="line"><span class="keyword">int</span> s[N],sg[N],n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSG</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(sg[x]!=<span class="number">-1</span>)</span><br><span class="line">                <span class="keyword">return</span> sg[x];</span><br><span class="line">        <span class="keyword">bool</span> vis[M];</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(x&gt;=s[i])</span><br><span class="line">                        vis[getSG(x-s[i])]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;; i++)</span><br><span class="line">                <span class="keyword">if</span>(!vis[i]) &#123;</span><br><span class="line">                        sg[x]=i;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="keyword">return</span> sg[x];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/09/12/SG%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF/#disqus_thread</comments>
    </item>
    
    <item>
      <title>BZOJ-2084-[Poi2010]Antisymmetry(回文自动机)</title>
      <link>http://yoursite.com/2018/09/11/BZOJ-2084-%5BPoi2010%5DAntisymmetry(%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA)/</link>
      <guid>http://yoursite.com/2018/09/11/BZOJ-2084-%5BPoi2010%5DAntisymmetry(%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA)/</guid>
      <pubDate>Tue, 11 Sep 2018 01:30:01 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/111/9/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/111/9/thumb.jpg" alt="img"></p><a id="more"></a><h2 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h2><p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=2084" target="_blank" rel="noopener">https://www.lydsy.com/JudgeOnline/problem.php?id=2084</a></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><ul><li>输入一个长度为 $n$ 的字符串 $S$</li><li>定义反对称：对于一个 $01$ 字符串，如果将这个字符串 $0$ 和 $1$ 取反后，再将整个串反过来和原串一样，就称作“反对称”字符串。比如 $00001111$ 和 $010101$ 就是反对称的，$1001$ 就不是。</li></ul><p>问：它有多少个子串是反对称的？</p><h2 id="数据范围："><a href="#数据范围：" class="headerlink" title="数据范围："></a>数据范围：</h2><ul><li>$n \leq 5e^5$</li></ul><h2 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h2><p>$input$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">11001011</span><br></pre></td></tr></table></figure><p>$output$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><p>$hint$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7个反对称子串分别是：01(出现两次), 10(出现两次), 0101, 1100和001011</span><br></pre></td></tr></table></figure><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><ul><li>所谓的反对称，其实就是：对称位置为 [0,1] 或 [1,0]。不过要注意的一点是一个字符不算反对称。</li><li>然后就可以使用回文自动机求解了。</li><li>要注意的是因为一个字符不算反对称，也就是说只要是长度为奇数的子串一定不是反对称。所以回文树上我们就可以不要长度为奇数的节点了。也就是，回溯时碰到节点1就不再往下做了。</li></ul><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">"="</span> &lt;&lt; x &lt;&lt; endl</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i = a;i &lt;= n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> per(i,n,a) for(int i = n;i &gt;= a;i--)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF_INT=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> INF_LL=<span class="number">0x7fffffff</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">OPEN</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">    freopen((s + <span class="string">".in"</span>).c_str(), <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen((s + <span class="string">".out"</span>).c_str(), <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn + <span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PalindromeAutomaton</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> ch[maxn][<span class="number">5</span>], fail[maxn], len[maxn], cnt[maxn], tot, lst;</span><br><span class="line">    PalindromeAutomaton()&#123;</span><br><span class="line">        tot = <span class="number">1</span>; fail[<span class="number">0</span>] = fail[<span class="number">1</span>] = <span class="number">1</span>; len[<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> c,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> p = lst;</span><br><span class="line">        <span class="keyword">while</span>(n - len[p] - <span class="number">1</span> != n &amp;&amp; (n - len[p] - <span class="number">1</span> &lt;= <span class="number">0</span> || s[n - len[p] - <span class="number">1</span>] == s[n]))&#123;</span><br><span class="line">            p = fail[p];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p == <span class="number">1</span>) &#123;lst = <span class="number">0</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span>(!ch[p][c])&#123;</span><br><span class="line">            <span class="keyword">int</span> now = ++tot,k = fail[p];</span><br><span class="line">            len[now] = len[p] + <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span>(n - len[k] - <span class="number">1</span> != n &amp;&amp; (n - len[k] - <span class="number">1</span> &lt;= <span class="number">0</span> || s[n - len[k] - <span class="number">1</span>] == s[n])) k = fail[k];</span><br><span class="line">            fail[now] = ch[k][c];</span><br><span class="line">            ch[p][c] = now;</span><br><span class="line">        &#125;</span><br><span class="line">        lst = ch[p][c]; cnt[lst]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> LL <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">        LL ans = <span class="number">0</span>;</span><br><span class="line">        per(i,tot,<span class="number">1</span>)&#123;</span><br><span class="line">            cnt[fail[i]] += cnt[i];</span><br><span class="line">            ans += cnt[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; pam;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;len);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s + <span class="number">1</span>);</span><br><span class="line">    rep(i,<span class="number">1</span>,len) pam.extend(s[i] - <span class="string">'0'</span> + <span class="number">2</span>,i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,pam.solve());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/09/11/BZOJ-2084-%5BPoi2010%5DAntisymmetry(%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA)/#disqus_thread</comments>
    </item>
    
    <item>
      <title>a</title>
      <link>http://yoursite.com/2018/09/10/BE,%20GE%20or%20NE(dp,%E5%8D%9A%E5%BC%88)/</link>
      <guid>http://yoursite.com/2018/09/10/BE,%20GE%20or%20NE(dp,%E5%8D%9A%E5%BC%88)/</guid>
      <pubDate>Mon, 10 Sep 2018 13:55:51 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/111/8/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/111/8/thumb.jpg" alt="img"></p><a id="more"></a><h2 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h2><p><a href="https://nanti.jisuanke.com/t/31454" target="_blank" rel="noopener">https://nanti.jisuanke.com/t/31454</a></p><h2 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h2><pre><code>有两个人在玩游戏，他们最开始有积分 $m$ 分，如果最终的积分 $val&gt;=k$，则进入 $Bad Ending$，如果最终积分 $val&lt;l$ 则进入 $Good Ending$。现在一共有 $n$ 个关卡，每个选项有三个选项 $a,b,c$，$a$ 代表使得积分 $+a$，$b$ 代表使得积分 $+b$，$c==1$ 代表使得积分 $*(-1)$。如果 $a$ 或$ b$ 等于 $0$ ，则不能选择，题目保证 $a$，$b$，$c$ 不同时为$0$，$A$ 先选，$B$ 后选，$A$ 想要进入 $GE$，$B$ 想要进入 $BE$，他们都会进行最优的操作，问你最后的结局。</code></pre><h2 id="数据范围："><a href="#数据范围：" class="headerlink" title="数据范围："></a>数据范围：</h2><p>$1 \leq n \leq 10^3$</p><p>$-100 \leq m,k,l \leq 100$</p><p>$0 \leq a,b $</p><p>$0 \leq c \leq 1$</p><h2 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h2><p>$input$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 -8 5 -5</span><br><span class="line">3 1 1</span><br><span class="line">2 0 1</span><br><span class="line">0 2 1</span><br></pre></td></tr></table></figure><p>$output$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Good Ending</span><br></pre></td></tr></table></figure><p>$input$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 0 10 3</span><br><span class="line">0 0 1</span><br><span class="line">0 10 1</span><br><span class="line">0 2 1</span><br></pre></td></tr></table></figure><p>$output$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bad Ending</span><br></pre></td></tr></table></figure><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><pre><code>因为要满足 $GE$，分数越高越好，而要满足 $BE$，分数越低越好，因此 $A$ 的策略应当是取尽可能大的，$B$ 的策略应当是取尽可能小的。从后往前推。</code></pre><ul><li><strong>状态方程</strong>：$dp[i][j]$ 代表在第 $i$ 个关卡中，分数为 $j$ 分时，选择操作后，最后所能获得的最大的分数。</li></ul><ul><li>初始化：$dp[n + 1][i] = i$ 至于为什么自己举一个只有一轮的例子模拟一下就知道了。</li></ul><ul><li><p><strong>转移方程</strong>：</p><p><img src="C:\Users\GP62\AppData\Local\Temp\1536588691655.png" alt="1536588691655"></p><p>而对于 $i$ 为奇数情况下是 $A$ 选，则 $i$ 的状态要优先选最大值；而对于 $i$ 为偶数的情况下 $B$ 选，则优先选最小。</p></li></ul><ul><li><strong>最后答案</strong>：判断 $dp[1][m]$ 满足什么条件后输出相应的答案。</li></ul><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a><strong>AC</strong>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">" = "</span> &lt;&lt; x &lt;&lt; endl</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i = a;i &lt;= n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> per(i,n,a) for(int i = n;i &gt;= a;i--)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF_INT = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> INF_LL = <span class="number">0x7fffffff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn],c[maxn];</span><br><span class="line"><span class="keyword">int</span> dp[maxn][<span class="number">405</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> bits = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m,k,l;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;n,&amp;m,&amp;k,&amp;l);</span><br><span class="line">rep(i,<span class="number">1</span>,n) <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;a[i],&amp;b[i],&amp;c[i]);</span><br><span class="line">rep(i,<span class="number">0</span>,<span class="number">200</span>) dp[n + <span class="number">1</span>][i] = i - <span class="number">100</span>;</span><br><span class="line">per(i,n,<span class="number">1</span>)&#123;</span><br><span class="line">rep(j,<span class="number">0</span>,<span class="number">200</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> k1 = dp[i + <span class="number">1</span>][min(<span class="number">200</span>,j + a[i])];</span><br><span class="line"><span class="keyword">int</span> k2 = dp[i + <span class="number">1</span>][max(<span class="number">0</span>,j - b[i])];</span><br><span class="line"><span class="keyword">int</span> k3 = dp[i + <span class="number">1</span>][<span class="number">200</span> - j];</span><br><span class="line"><span class="keyword">if</span>(i &amp; <span class="number">1</span>)&#123; <span class="comment">// max</span></span><br><span class="line">dp[i][j] = <span class="number">-100</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i]) dp[i][j] = max(dp[i][j],k1);</span><br><span class="line"><span class="keyword">if</span>(b[i]) dp[i][j] = max(dp[i][j],k2);</span><br><span class="line"><span class="keyword">if</span>(c[i]) dp[i][j] = max(dp[i][j],k3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123; <span class="comment">// min</span></span><br><span class="line">dp[i][j] = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i]) dp[i][j] = min(dp[i][j],k1);</span><br><span class="line"><span class="keyword">if</span>(b[i]) dp[i][j] = min(dp[i][j],k2);</span><br><span class="line"><span class="keyword">if</span>(c[i]) dp[i][j] = min(dp[i][j],k3);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dp[<span class="number">1</span>][m + <span class="number">100</span>] &gt;= k) <span class="built_in">printf</span>(<span class="string">"Good Ending\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(dp[<span class="number">1</span>][m + <span class="number">100</span>] &lt;= l) <span class="built_in">printf</span>(<span class="string">"Bad Ending\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Normal Ending\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/09/10/BE,%20GE%20or%20NE(dp,%E5%8D%9A%E5%BC%88)/#disqus_thread</comments>
    </item>
    
    <item>
      <title>回文自动机</title>
      <link>http://yoursite.com/2018/09/09/%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/</link>
      <guid>http://yoursite.com/2018/09/09/%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/</guid>
      <pubDate>Sun, 09 Sep 2018 02:41:33 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/108/2/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/108/2/thumb.jpg" alt="img"></p><a id="more"></a><h1 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h1><ul><li><a href="https://ksmeow.moe/palindromic_tree/" target="_blank" rel="noopener">https://ksmeow.moe/palindromic_tree/</a></li><li><a href="https://blog.csdn.net/u013368721/article/details/42100363" target="_blank" rel="noopener">https://blog.csdn.net/u013368721/article/details/42100363</a></li></ul><h2 id="截图："><a href="#截图：" class="headerlink" title="截图："></a>截图：</h2><p><img src="C:\Users\GP62\AppData\Local\Temp\1537025549023.png" alt="1537025549023"></p><p><img src="C:\Users\GP62\AppData\Local\Temp\1537025580773.png" alt="1537025580773"></p><p><img src="C:\Users\GP62\AppData\Local\Temp\1537025603924.png" alt="1537025603924"></p><p><img src="C:\Users\GP62\AppData\Local\Temp\1537025613755.png" alt="1537025613755"></p><h2 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h2><p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=3676" target="_blank" rel="noopener">https://www.lydsy.com/JudgeOnline/problem.php?id=3676</a></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><ul><li>给你一个只由小写字母构成的字符串 $S$ </li></ul><p>问 ：字符串 $S$ 中每一个不同回文串出现的次数乘长度之和为多少？</p><h2 id="数据范围："><a href="#数据范围：" class="headerlink" title="数据范围："></a>数据范围：</h2><ul><li>$ 1 \leq |S| \leq 3e^5$ </li></ul><h2 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h2><p>$input$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abacaba</span><br></pre></td></tr></table></figure><p>$output$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><p>$input$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www</span><br></pre></td></tr></table></figure><p>$output$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p>$hint$ </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">一个串是回文的，当且仅当它从左到右读和从右到左读完全一样。 </span><br><span class="line"></span><br><span class="line">在第一个样例中，回文子串有7个：a，b，c，aba，aca，bacab，abacaba，其中： </span><br><span class="line"></span><br><span class="line">● a出现4次，其出现值为4：1：1=4 </span><br><span class="line"></span><br><span class="line">● b出现2次，其出现值为2：1：1=2 </span><br><span class="line"></span><br><span class="line">● c出现1次，其出现值为l：1：l=l </span><br><span class="line"></span><br><span class="line">● aba出现2次，其出现值为2：1：3=6 </span><br><span class="line"></span><br><span class="line">● aca出现1次，其出现值为1=1：3=3 </span><br><span class="line"></span><br><span class="line">● bacab出现1次，其出现值为1：1：5=5 </span><br><span class="line"></span><br><span class="line">● abacaba出现1次，其出现值为1：1：7=7 </span><br><span class="line"></span><br><span class="line">故最大回文子串出现值为7。 xxxxxxxxxx 一个串是回文的，当且仅当它从左到右读和从右到左读完全一样。 在第一个样例中，回文子串有7个：a，b，c，aba，aca，bacab，abacaba，其中：</span><br><span class="line">​● a出现4次，其出现值为4：1：1=4 </span><br><span class="line">​● b出现2次，其出现值为2：1：1=2 </span><br><span class="line">​● c出现1次，其出现值为l：1：l=l </span><br><span class="line">​● aba出现2次，其出现值为2：1：3=6 </span><br><span class="line">​● aca出现1次，其出现值为1=1：3=3 </span><br><span class="line">​●bacab出现1次，其出现值为1：1：5=5 </span><br><span class="line">​● abacaba出现1次，其出现值为1：1：7=7 </span><br><span class="line">​故最大回文子串出现值为7。 www</span><br></pre></td></tr></table></figure><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p>回文自动机</p><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">" = "</span> &lt;&lt; x &lt;&lt; endl</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for(int i = a;i &lt;= n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> per(i,n,a) for(int i = n;i &gt;= a;i--)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF_INT = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> INF_LL = <span class="number">0x7fffffff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PalindromAutomaton</span>&#123;</span> <span class="comment">//每个节点代表一个不同的回文串</span></span><br><span class="line"><span class="keyword">int</span> ch[maxn][<span class="number">26</span>], fail[maxn], len[maxn], cnt[maxn], tot, lst;</span><br><span class="line"><span class="comment">//ch[i][j] : 表示节点 i 有一条 j 边指向的节点 </span></span><br><span class="line"><span class="comment">//fail[i]:   表示节点 i 失配后跳转的节点</span></span><br><span class="line"><span class="comment">//len[i] :   表示节点 i 所代表的回文串的长度</span></span><br><span class="line"><span class="comment">//cnt[i] :   表示节点 i 所代表的回文串出现的次数(建树时求出的不是完全的，最后需要倒着跑一遍以后 才是正确的)</span></span><br><span class="line"><span class="comment">//tot :      表示总共节点数</span></span><br><span class="line"><span class="comment">//lst :      表示上一次匹配到的节点</span></span><br><span class="line">PalindromAutomaton()&#123;</span><br><span class="line">tot = <span class="number">1</span>; fail[<span class="number">0</span>] = fail[<span class="number">1</span>] = <span class="number">1</span>; len[<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> c, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p = lst;</span><br><span class="line"><span class="keyword">while</span>(s[n - len[p] - <span class="number">1</span>] != s[n]) p = fail[p];</span><br><span class="line"><span class="keyword">if</span>(!ch[p][c])&#123; <span class="comment">// 若ch[p][c]不存在, 表示会形成一个新的回文串</span></span><br><span class="line"><span class="keyword">int</span> now = ++tot, k = fail[p];</span><br><span class="line">len[now] = len[p] + <span class="number">2</span>;</span><br><span class="line">cnt[now]++;</span><br><span class="line"><span class="keyword">while</span>(s[n - len[k] - <span class="number">1</span>] != s[n]) k = fail[k];</span><br><span class="line">fail[now] = ch[k][c]; ch[p][c] = now;</span><br><span class="line">&#125;</span><br><span class="line">lst = ch[p][c];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">per(i,tot,<span class="number">1</span>) cnt[fail[i]] += cnt[i];</span><br><span class="line">rep(i,<span class="number">1</span>,tot) ans = max(ans,cnt[i] * len[i]);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;pam;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s + <span class="number">1</span>);</span><br><span class="line">n = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</span><br><span class="line">rep(i,<span class="number">1</span>,n) pam.extend(s[i] - <span class="string">'a'</span>,i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,pam.solve());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/09/09/%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/#disqus_thread</comments>
    </item>
    
    <item>
      <title></title>
      <link>http://yoursite.com/2018/08/10/%E5%BC%A6%E5%9B%BE%E4%B8%8E%E5%8C%BA%E9%97%B4%E5%9B%BE/</link>
      <guid>http://yoursite.com/2018/08/10/%E5%BC%A6%E5%9B%BE%E4%B8%8E%E5%8C%BA%E9%97%B4%E5%9B%BE/</guid>
      <pubDate>Fri, 10 Aug 2018 02:18:06 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;弦图与区间图&quot;&gt;&lt;a href=&quot;#弦图与区间图&quot; class=&quot;headerlink&quot; title=&quot;弦图与区间图&quot;&gt;&lt;/a&gt;弦图与区间图&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/108/1/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h1 id="弦图与区间图"><a href="#弦图与区间图" class="headerlink" title="弦图与区间图"></a>弦图与区间图</h1><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/108/1/thumb.jpg" alt="img"></p><a id="more"></a><h3 id="诱导子图："><a href="#诱导子图：" class="headerlink" title="诱导子图："></a>诱导子图：</h3><p>若选择了某些点，要把在原图上与这些点有相连的边都包含。</p><h3 id="团："><a href="#团：" class="headerlink" title="团："></a>团：</h3><p>是G的一个子图，完全图，也就是两两点有连边。</p><h3 id="极大团："><a href="#极大团：" class="headerlink" title="极大团："></a>极大团：</h3><p>不是其它团的子集。</p><h3 id="最大团-W-G-："><a href="#最大团-W-G-：" class="headerlink" title="最大团 W(G)："></a>最大团 W(G)：</h3><p>顶点最多的极大团。</p><h3 id="最小染色-X-G"><a href="#最小染色-X-G" class="headerlink" title="最小染色 X(G):"></a>最小染色 X(G):</h3><p>用最少的颜色给点染色使得相邻点颜色不同。</p><h3 id="最大独立集-α-G-："><a href="#最大独立集-α-G-：" class="headerlink" title="最大独立集 α(G)："></a>最大独立集 α(G)：</h3><p>最大的一个点的子集使得任何两个点不相邻。</p><h3 id="最小团覆盖-K-G-："><a href="#最小团覆盖-K-G-：" class="headerlink" title="最小团覆盖 K(G)："></a>最小团覆盖 K(G)：</h3><p>用最少个数的团覆盖所有的点。</p><h3 id="W-G-lt-X-G-普通图"><a href="#W-G-lt-X-G-普通图" class="headerlink" title="W(G) &lt;= X(G)  (普通图)"></a>W(G) &lt;= X(G)  (普通图)</h3><h3 id="α-G-lt-K-G-普通图"><a href="#α-G-lt-K-G-普通图" class="headerlink" title="α(G) &lt;= K(G) (普通图)"></a>α(G) &lt;= K(G) (普通图)</h3><h3 id="W-G-X-G-弦图-最大团数-最小色数"><a href="#W-G-X-G-弦图-最大团数-最小色数" class="headerlink" title="W(G) == X(G)  (弦图)  最大团数 = 最小色数"></a>W(G) == X(G)  (弦图)  最大团数 = 最小色数</h3><h3 id="α-G-K-G-弦图-最大独立集-最小团覆盖"><a href="#α-G-K-G-弦图-最大独立集-最小团覆盖" class="headerlink" title="α(G) == K(G)  (弦图)  最大独立集 = 最小团覆盖"></a>α(G) == K(G)  (弦图)  最大独立集 = 最小团覆盖</h3><h3 id="弦："><a href="#弦：" class="headerlink" title="弦："></a>弦：</h3><p>连接环中不相邻的两个点的边。</p><h3 id="弦图："><a href="#弦图：" class="headerlink" title="弦图："></a>弦图：</h3><p>一个无向图称为弦图，当图中任意长度大于3的环都至少有一个弦。</p><h3 id="单纯点："><a href="#单纯点：" class="headerlink" title="单纯点："></a>单纯点：</h3><p>若一个点加上它相邻的点的诱导子图为一个团，则这个点为单纯点。</p><h3 id="引理："><a href="#引理：" class="headerlink" title="引理："></a>引理：</h3><p>任何一个弦图都至少有一个单纯点，不是完全图的弦图至少有两个不相邻的单纯点。</p><h3 id="完美消除序列："><a href="#完美消除序列：" class="headerlink" title="完美消除序列："></a>完美消除序列：</h3><p>对与序列中的点vi，排在vi后面并且和vi相连的点是一个团 </p><h3 id="定理："><a href="#定理：" class="headerlink" title="定理："></a>定理：</h3><p>一个无向图是弦图当且仅当它有一个完美消除序列。</p><h3 id="完美消除序列的作用："><a href="#完美消除序列的作用：" class="headerlink" title="完美消除序列的作用："></a>完美消除序列的作用：</h3><p>求弦图的最大团数/最小色数的时候，只要在完美消除序列上从后往前贪心染色即可。  </p><p>而求最大独立集/最小团覆盖的时候，只要在完美消除序列上从前往后贪心取点即可。 </p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/08/10/%E5%BC%A6%E5%9B%BE%E4%B8%8E%E5%8C%BA%E9%97%B4%E5%9B%BE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>AtCoder-C-String Coloring(字符串)</title>
      <link>http://yoursite.com/2018/07/15/AtCoder-C-String%20Coloring(%E5%AD%97%E7%AC%A6%E4%B8%B2)/</link>
      <guid>http://yoursite.com/2018/07/15/AtCoder-C-String%20Coloring(%E5%AD%97%E7%AC%A6%E4%B8%B2)/</guid>
      <pubDate>Sun, 15 Jul 2018 12:35:38 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/103/6/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/103/6/thumb.jpg" alt="img"></p><a id="more"></a><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><ul><li>输入 $n$ 和 字符串 $s$  ，代表 字符串 $s$ 的长度为 $2 * n$ </li><li>正着选 $n$ 个字符构成一个字符串 $s1$ ，然后倒着选 $n$ 个字符构成一个字符串 $s2$ ，不能选重复的字符。</li></ul><p>问：字符串 $s1$ 与 字符串 $s2$ 完全一样的的方案数是多少？</p><h2 id="数据范围："><a href="#数据范围：" class="headerlink" title="数据范围："></a>数据范围：</h2><ul><li>$1 &lt;= n &lt;= 18$</li><li>字符串 $s$ 都是小写字母</li></ul><h2 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">cabaacba</span><br><span class="line"></span><br><span class="line">18</span><br><span class="line">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span><br></pre></td></tr></table></figure><h2 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line"></span><br><span class="line">9075135300</span><br><span class="line"></span><br><span class="line">[The answer may not be representable as a 32-bit integer.]</span><br></pre></td></tr></table></figure><h2 id="样例解释："><a href="#样例解释：" class="headerlink" title="样例解释："></a>样例解释：</h2><p>$There are four ways to paint the string, as follows:$</p><ul><li>[c] a b a [a] c [b] [a]</li><li>[c] a b [a] a c [b] [a]</li><li>c [a] [b] [a] a [c] b a</li><li>c [a] [b] a [a] [c] b a</li></ul><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p>因为字符串长度最大为36，那么我们可以先分成两半，然后二进制暴力枚举。0 代表倒着的，1 代表正着的。然后要相互对称。</p><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;pair &lt;<span class="built_in">string</span>,<span class="built_in">string</span>&gt;,LL&gt; cnt;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; (<span class="number">1</span> &lt;&lt; n);i++)&#123; <span class="comment">// 先枚举左半边</span></span><br><span class="line"><span class="built_in">string</span> s1 = <span class="string">""</span>,s2 = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i &amp; (<span class="number">1</span> &lt;&lt; j)) s1 += s[j]; <span class="comment">// 若 i 的第 j 位为 1，则 s[j] 加入 s1.</span></span><br><span class="line"><span class="keyword">else</span> s2 += s[j]; <span class="comment">// 若 i 的第 j 位为 0，则 s[j] 加入 s2.</span></span><br><span class="line">&#125;</span><br><span class="line">cnt[make_pair(s1,s2)]++; <span class="comment">// 开个 map 来记录有（s1，s2）有多少对</span></span><br><span class="line">&#125;</span><br><span class="line">LL sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; (<span class="number">1</span> &lt;&lt; n);i++)&#123; <span class="comment">// 枚举右半边</span></span><br><span class="line"><span class="built_in">string</span> s1 = <span class="string">""</span>,s2 = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = n - <span class="number">1</span>;j &gt;= <span class="number">0</span>;j--)&#123;</span><br><span class="line"><span class="keyword">if</span>(i &amp; (<span class="number">1</span> &lt;&lt; j)) s2 += s[j + n]; <span class="comment">// 若 i 的第 j 位为 1，则 s[j + n] 加入 s2.</span></span><br><span class="line"><span class="keyword">else</span> s1 += s[j + n]; <span class="comment">// 若 i 的第 j 位为 0，则 s[j + n] 加入 s1.</span></span><br><span class="line">&#125;</span><br><span class="line">sum += cnt[make_pair(s1,s2)]; <span class="comment">// 因为 s1 和 s2 要相等所以要对称相等</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/07/15/AtCoder-C-String%20Coloring(%E5%AD%97%E7%AC%A6%E4%B8%B2)/#disqus_thread</comments>
    </item>
    
    <item>
      <title>拓扑排序模板</title>
      <link>http://yoursite.com/2018/07/08/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E6%A8%A1%E6%9D%BF/</link>
      <guid>http://yoursite.com/2018/07/08/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E6%A8%A1%E6%9D%BF/</guid>
      <pubDate>Sun, 08 Jul 2018 07:29:11 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/8293/1528099940080/thumb_Mon_Jun_04_2018.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/8293/1528099940080/thumb_Mon_Jun_04_2018.jpg" alt="img"></p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line"><span class="keyword">int</span> in[maxn],seq[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">topology</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(in[i] == <span class="number">0</span>) seq[++cnt] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> head = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(head &lt;= cnt)&#123;</span><br><span class="line">        <span class="keyword">int</span> u = seq[head];</span><br><span class="line">        <span class="keyword">int</span> ans = cnt;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; G[u].size();i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = G[u][i];</span><br><span class="line">            in[v]--;</span><br><span class="line">            <span class="keyword">if</span>(in[v] == <span class="number">0</span>) seq[++cnt] = v;</span><br><span class="line">        &#125;</span><br><span class="line">        head++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//当cnt不等于n时，说明这图有环</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">        G[x].push_back(y);</span><br><span class="line">        in[y]++;;</span><br><span class="line">    &#125;</span><br><span class="line">    topology();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= cnt;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,seq[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/07/08/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E6%A8%A1%E6%9D%BF/#disqus_thread</comments>
    </item>
    
    <item>
      <title>去重全排列</title>
      <link>http://yoursite.com/2018/07/08/%E5%8E%BB%E9%87%8D%E5%85%A8%E6%8E%92%E5%88%97/</link>
      <guid>http://yoursite.com/2018/07/08/%E5%8E%BB%E9%87%8D%E5%85%A8%E6%8E%92%E5%88%97/</guid>
      <pubDate>Sun, 08 Jul 2018 06:57:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/42077/1519635636227/thumb_Mon_Feb_26_2018.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/42077/1519635636227/thumb_Mon_Feb_26_2018.jpg" alt="img"></p><a id="more"></a><h2 id="公式为"><a href="#公式为" class="headerlink" title="公式为:"></a>公式为:</h2><p>$  \frac{n!}{(k_1)! (k_2)! … (k_p)!}  $</p><p>$n$ : 串长度</p><p>$k_i$ : 串中第 $i$ 种元素出现的次数</p><p>$p$ : 串中不同元素的个数</p><h2 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h2><h3 id="串为-abac-求串的去重全排列的个数"><a href="#串为-abac-求串的去重全排列的个数" class="headerlink" title="串为 $abac$ , 求串的去重全排列的个数"></a>串为 $abac$ , 求串的去重全排列的个数</h3><ul><li><p>串的长度为 $4$ , 所以 $n$ $=$ $4$</p></li><li><p>在这个串中，一共有 $3$ 种元素，分别为 $a$ , $b$ , $c$ 所以 $p$ $=$ $3$.</p></li><li>元素 $a$ 出现 $2$ 次,所以 $k_1$ $=$ $2$ </li><li>元素 $b$ 出现 $1$ 次,所以 $k_2$ $=$ $1$</li><li>元素 $c$ 出现 $1$ 次,所以 $k_3$ $=$ $1$ </li></ul><p>所以去重全排列个数为：$\frac{4!}{(2)! <em> (1)! </em> (1)! }$ $=$ $12$ </p><h4 id="去重全排列如下："><a href="#去重全排列如下：" class="headerlink" title="去重全排列如下："></a>去重全排列如下：</h4><p><code>1.aabc</code></p><p><code>2.aacb</code></p><p><code>3.abac</code></p><p><code>4.abca</code></p><p><code>5.acab</code></p><p><code>6.acba</code></p><p><code>7.cbaa</code></p><p><code>8.bcaa</code></p><p><code>9.caba</code></p><p><code>10.acba</code></p><p><code>11.baca</code></p><p><code>12.abca</code></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/07/08/%E5%8E%BB%E9%87%8D%E5%85%A8%E6%8E%92%E5%88%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>dfs序模板</title>
      <link>http://yoursite.com/2018/07/08/dfs%E5%BA%8F%E6%A8%A1%E6%9D%BF/</link>
      <guid>http://yoursite.com/2018/07/08/dfs%E5%BA%8F%E6%A8%A1%E6%9D%BF/</guid>
      <pubDate>Sun, 08 Jul 2018 06:47:40 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/210541/1531033503381/thumb_Sun_Jul_08_2018.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/210541/1531033503381/thumb_Sun_Jul_08_2018.jpg" alt="img"></p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;G[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> in[maxn],out[maxn],d[maxn];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> pre,<span class="keyword">int</span> deep)</span></span>&#123;</span><br><span class="line">    in[x] = ++tot;</span><br><span class="line">    d[x] = deep;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; G[x].size();i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> v = G[x][i];</span><br><span class="line">        <span class="keyword">if</span>(v != pre) dfs(v,x,deep + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    out[x] = tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        G[x].push_back(y);</span><br><span class="line">        G[y].push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,i,in[i],out[i]);<span class="comment">//节点i的子树的编号</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/07/08/dfs%E5%BA%8F%E6%A8%A1%E6%9D%BF/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
