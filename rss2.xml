<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>天之界</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>踏一步便是虚无</description>
    <pubDate>Tue, 21 May 2019 14:20:31 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>JSP内置对象</title>
      <link>http://yoursite.com/2019/05/12/JSP%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/</link>
      <guid>http://yoursite.com/2019/05/12/JSP%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/</guid>
      <pubDate>Sun, 12 May 2019 07:53:03 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/144/3/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/144/3/thumb.jpg" alt="img"></p><a id="more"></a><h1 id="JSP内置对象"><a href="#JSP内置对象" class="headerlink" title="JSP内置对象"></a>JSP内置对象</h1><p>JSP中一共预先定义了9个这样的对象，分别为rqueset , response , session , application , out , pageContext , config , page 和 exception。</p><h2 id="一-request-对象"><a href="#一-request-对象" class="headerlink" title="一.request 对象"></a>一.request 对象</h2><p>request对象 [封装了] 由客户生成的 [HTTP请求] 的 [所有细节] ，主要包括 [HTTP头信息] ，[系统信息] ，[请求方式] 和 [请求参数] 等。通过request对象提供的相应方法可以 [处理] 客户端浏览器 [提交] 的 [HTTP请求] 中的 [各项参数] 。</p><h3 id="1-访问请求参数"><a href="#1-访问请求参数" class="headerlink" title="1.访问请求参数"></a>1.访问请求参数</h3><p><img src="https://i.loli.net/2019/05/12/5cd7d3e0ad3de.jpg" alt=""></p><h3 id="2-在作用域中管理属性-？"><a href="#2-在作用域中管理属性-？" class="headerlink" title="2.在作用域中管理属性 ？"></a>2.在作用域中管理属性 ？</h3><p>在进行 [请求转发] 时，需要把一些数据传递到转发后的页面进行处理。这时，就需要使用request对象的setAttribute()方法将数据 [保存] 到 [request范围内] 的 [变量中] 。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">request.setAttribute(String name,Object object);</span><br><span class="line"></span><br><span class="line">name:表示变量名，为String类型，在转发后的页面取数据时，就是通过这个变量名来获取数据的。</span><br><span class="line">obejct:用于指定需要在request范围内传递的数据，为Object类型。</span><br><span class="line"></span><br><span class="line">request.getAttribute(String name); &lt;!-- 这里返回值为Object类型 --&gt;</span><br></pre></td></tr></table></figure><h3 id="3-获取cookie"><a href="#3-获取cookie" class="headerlink" title="3.获取cookie"></a>3.获取cookie</h3><p>在互联网中cookie是 [小段的文本信息] ，在网络服务器上生成，并发送给浏览器。通过使用cookie可以 [标识用户身份] ，[记录用户名和密码] ，[跟踪重复用户] 等。浏览器将cookie以key/value的形式保存到客户机的某个指定目录中。</p><p>通过cookie的 [getCookies()] 方法即可获取到 [所有cookie对象的集合] ；</p><p>通过cookie对象的 [getName()] 方法可以获取到 [指定名称的cookie] ；</p><p>通过 [getValue()] 方法可获取到 [cookie对象的值] 。</p><p>另外，将一个cookie对象发送到客户端，使用response对象的addCookie()方法。</p><p><img src="https://i.loli.net/2019/05/12/5cd7d956e754f.jpg" alt=""></p><p><img src="https://i.loli.net/2019/05/12/5cd7d96e24ec9.jpg" alt=""></p><h3 id="4-解决中文乱码"><a href="#4-解决中文乱码" class="headerlink" title="4.解决中文乱码"></a>4.解决中文乱码</h3><p><img src="https://i.loli.net/2019/05/12/5cd7da45a5054.jpg" alt=""></p><h3 id="5-获取客户端信息"><a href="#5-获取客户端信息" class="headerlink" title="5.获取客户端信息"></a>5.获取客户端信息</h3><p><img src="https://i.loli.net/2019/05/12/5cd7dab702084.jpg" alt=""></p><p><img src="https://i.loli.net/2019/05/12/5cd7dadb39fc4.jpg" alt=""></p><h3 id="6-显示国际化信息"><a href="#6-显示国际化信息" class="headerlink" title="6.显示国际化信息"></a>6.显示国际化信息</h3><p><img src="https://i.loli.net/2019/05/12/5cd7db0b749e4.jpg" alt=""></p><h2 id="二-response-对象"><a href="#二-response-对象" class="headerlink" title="二.response 对象"></a>二.response 对象</h2><h3 id="1-重定向"><a href="#1-重定向" class="headerlink" title="1.重定向"></a>1.重定向</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response.sendRedirect(<span class="string">"login.jsp"</span>);</span><br><span class="line">response.sendRedirect(<span class="string">"www.baidu.com"</span>);</span><br></pre></td></tr></table></figure><p>重定向之后的代码已经没有意义了。</p><h3 id="2-处理HTTP文件头"><a href="#2-处理HTTP文件头" class="headerlink" title="2.处理HTTP文件头"></a>2.处理HTTP文件头</h3><p>通过response对象可以设置HTTP响应报头。</p><h4 id="①禁用缓存"><a href="#①禁用缓存" class="headerlink" title="①禁用缓存"></a>①禁用缓存</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response.setHeader(<span class="string">"Cache-Control"</span>,<span class="string">"no-store"</span>);</span><br><span class="line">response.setDateHeader(<span class="string">"Epires"</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h4 id="②设置页面自动刷新"><a href="#②设置页面自动刷新" class="headerlink" title="②设置页面自动刷新"></a>②设置页面自动刷新</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.setHeader(<span class="string">"refresh"</span>,<span class="string">"5"</span>); <span class="comment">// 设置网页每5秒自动刷新一次</span></span><br></pre></td></tr></table></figure><h4 id="③定时跳转网页"><a href="#③定时跳转网页" class="headerlink" title="③定时跳转网页"></a>③定时跳转网页</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.setHeader(<span class="string">"refresh"</span>,<span class="string">"2;URL=welcome.jsp"</span>); <span class="comment">// 设置2秒钟后自动跳转到指定的页面</span></span><br></pre></td></tr></table></figure><h3 id="3-设置输出缓冲"><a href="#3-设置输出缓冲" class="headerlink" title="3.设置输出缓冲"></a>3.设置输出缓冲</h3><p>通常情况下，服务器要输出到客户端的内容不会直接写到客户端，而是先写到一个输出的缓冲区。</p><p><img src="https://i.loli.net/2019/05/19/5ce0f8b927ee175382.jpg" alt=""></p><h2 id="三-session对象"><a href="#三-session对象" class="headerlink" title="三.session对象"></a>三.session对象</h2><p>通过session可以在应用程序的Web页面间进行跳转时，保存用户的状态，是整个用户会话一直存在下去，直到关闭整个浏览器。</p><h4 id="1-创建及获取客户的会话"><a href="#1-创建及获取客户的会话" class="headerlink" title="1.创建及获取客户的会话"></a>1.创建及获取客户的会话</h4><p><img src="https://i.loli.net/2019/05/19/5ce0fa595f31182396.jpg" alt=""></p><h4 id="2-从会话中移动指定的绑定对象"><a href="#2-从会话中移动指定的绑定对象" class="headerlink" title="2.从会话中移动指定的绑定对象"></a>2.从会话中移动指定的绑定对象</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.removeAttribute(&quot;username&quot;);</span><br></pre></td></tr></table></figure><h3 id="3-销毁session"><a href="#3-销毁session" class="headerlink" title="3.销毁session"></a>3.销毁session</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.invalidate();</span><br></pre></td></tr></table></figure><h3 id="4-会话超时的管理"><a href="#4-会话超时的管理" class="headerlink" title="4.会话超时的管理"></a>4.会话超时的管理</h3><p><img src="https://i.loli.net/2019/05/19/5ce0fc3c3b82322698.jpg" alt=""></p><h2 id="四-application对象"><a href="#四-application对象" class="headerlink" title="四.application对象"></a>四.application对象</h2><p>application对象可将信息保存在服务器中，直到服务器关闭。类似全局变量</p><p><img src="https://i.loli.net/2019/05/19/5ce0fd1707b5d50821.jpg" alt=""></p><h3 id="1-访问应用程序初始化参数"><a href="#1-访问应用程序初始化参数" class="headerlink" title="1.访问应用程序初始化参数"></a>1.访问应用程序初始化参数</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">application.getInitParameter(String name); <span class="comment">// 返回已命名的参数值</span></span><br><span class="line">application.getAttributeNames(); <span class="comment">// 返回所有已定义的应用程序初始化参数名的枚举</span></span><br></pre></td></tr></table></figure><h3 id="2-管理应用程序环境属性"><a href="#2-管理应用程序环境属性" class="headerlink" title="2.管理应用程序环境属性"></a>2.管理应用程序环境属性</h3><p><img src="https://i.loli.net/2019/05/19/5ce0fe46ecb6050191.jpg" alt=""></p><h2 id="五-out对象"><a href="#五-out对象" class="headerlink" title="五.out对象"></a>五.out对象</h2><h3 id="1-向客户端输出数据"><a href="#1-向客户端输出数据" class="headerlink" title="1.向客户端输出数据"></a>1.向客户端输出数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out.print(&quot;a&quot;);</span><br></pre></td></tr></table></figure><h3 id="2-管理相应缓冲"><a href="#2-管理相应缓冲" class="headerlink" title="2.管理相应缓冲"></a>2.管理相应缓冲</h3><p><img src="https://i.loli.net/2019/05/19/5ce0ff209f29655230.jpg" alt=""></p><h2 id="六-其他内置对象"><a href="#六-其他内置对象" class="headerlink" title="六.其他内置对象"></a>六.其他内置对象</h2><h3 id="1-获取会话范围的pageContext对象"><a href="#1-获取会话范围的pageContext对象" class="headerlink" title="1.获取会话范围的pageContext对象"></a>1.获取会话范围的pageContext对象</h3><p><img src="https://i.loli.net/2019/05/19/5ce0ffb2a559888335.jpg" alt=""></p><h3 id="2-读取web-xml配置信息的config对象"><a href="#2-读取web-xml配置信息的config对象" class="headerlink" title="2.读取web.xml配置信息的config对象"></a>2.读取web.xml配置信息的config对象</h3><p><img src="https://i.loli.net/2019/05/19/5ce1001c5796e73449.jpg" alt=""></p><h3 id="3-应答或请求的page对象"><a href="#3-应答或请求的page对象" class="headerlink" title="3.应答或请求的page对象"></a>3.应答或请求的page对象</h3><p><img src="https://i.loli.net/2019/05/19/5ce1008d5fd3b58942.jpg" alt=""></p><h3 id="4-获取异常信息的exception对象"><a href="#4-获取异常信息的exception对象" class="headerlink" title="4.获取异常信息的exception对象"></a>4.获取异常信息的exception对象</h3><p><img src="https://i.loli.net/2019/05/19/5ce100d4544f048091.jpg" alt=""></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/05/12/JSP%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JSP 基本语法</title>
      <link>http://yoursite.com/2019/05/07/JSP%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
      <guid>http://yoursite.com/2019/05/07/JSP%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
      <pubDate>Tue, 07 May 2019 06:59:02 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/143/4/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/143/4/thumb.jpg" alt="img"></p><a id="more"></a><h1 id="JSP基本语法"><a href="#JSP基本语法" class="headerlink" title="JSP基本语法"></a>JSP基本语法</h1><p><img src="https://i.loli.net/2019/05/07/5cd130dc5f767.jpg" alt=""></p><h2 id="一-指令标识"><a href="#一-指令标识" class="headerlink" title="一.指令标识"></a>一.指令标识</h2><p>主要用于设定整个JSP页面范围内都有效的相关信息，它是被服务器解释并运行的。指令标签对于客户浏览器是不可见的。</p><h4 id="语法格式："><a href="#语法格式：" class="headerlink" title="语法格式："></a>语法格式：</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ 指令名 属性<span class="number">1</span> = <span class="string">"属性值1"</span> 属性<span class="number">2</span> = <span class="string">"属性2"</span>...%&gt;</span><br><span class="line"></span><br><span class="line">*指令名：用于指定 [指令名称]，在JSP中包含 [page]，[inlcude] 和 [taglib] <span class="number">3</span>条指令。</span><br><span class="line"></span><br><span class="line">*属性：用于指定 [属性名称]，不同的指令包含不同的属性。在一个指令中可以设置 [多个属性] ，各属性之间用 [逗号] 或 [空格] 分隔。</span><br><span class="line"></span><br><span class="line">*属性值：用于指定 [属性值]。</span><br></pre></td></tr></table></figure><h3 id="1-page指令"><a href="#1-page指令" class="headerlink" title="1.page指令"></a>1.page指令</h3><p>page是JSP页面最常用的指令，用于定义整个JSP页面的相关属性，这些属性在JSP中 [被] 服务器[解析] 成 [Servlet] 时会 [转换] 为相应的 [java程序代码] 。page指令的语法格式：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page attr1 = <span class="string">"value1"</span> attr2 = <span class="string">"value2"</span>... %&gt;</span><br></pre></td></tr></table></figure><h4 id="①-language-属性"><a href="#①-language-属性" class="headerlink" title="①.language 属性"></a>①.language 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置JSP页面 [语言] 属性：</span><br><span class="line">&lt;%@ page language = <span class="string">"java"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="②-extends-属性"><a href="#②-extends-属性" class="headerlink" title="②.extends 属性"></a>②.extends 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设置JSP页面 [继承] 的 [java类] ，[一般不用] 。</span><br></pre></td></tr></table></figure><h4 id="③-import-属性"><a href="#③-import-属性" class="headerlink" title="③.import 属性"></a>③.import 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在JSP页面中 [导入类包]:</span><br><span class="line">&lt;%@ page <span class="keyword">import</span> = <span class="string">"java.util.*"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="④-pageEncoding-属性"><a href="#④-pageEncoding-属性" class="headerlink" title="④.pageEncoding 属性"></a>④.pageEncoding 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置JSP页面 [编码格式]：</span><br><span class="line">&lt;%@ page pageEncoding = <span class="string">"UTF-8"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="⑤-contentType-属性"><a href="#⑤-contentType-属性" class="headerlink" title="⑤.contentType 属性"></a>⑤.contentType 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置JSP页面的 [MIME类型] 和 [字符编码]：</span><br><span class="line">&lt;%@ page contentType = <span class="string">"text/html; charset = UTF-8"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="⑥-session-属性"><a href="#⑥-session-属性" class="headerlink" title="⑥.session 属性"></a>⑥.session 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置JSP页面 [是否] 使用 [HTTP] 的 [session] 会话对象：</span><br><span class="line">&lt;%@ page session = <span class="string">"false"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="⑦-buffer-属性"><a href="#⑦-buffer-属性" class="headerlink" title="⑦.buffer 属性"></a>⑦.buffer 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置JSP的 [out 输出对象] 使用的 [缓冲区大小]，默认大小为<span class="number">8</span>kB，且单位只能使用KB。(<span class="number">8</span>,<span class="number">16</span>,<span class="number">32</span>,<span class="number">64</span>,<span class="number">128</span>)</span><br><span class="line">&lt;%@ page buffer = <span class="string">"128KB"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="⑧-outoFlush-属性"><a href="#⑧-outoFlush-属性" class="headerlink" title="⑧.outoFlush 属性"></a>⑧.outoFlush 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置JSP页面 [缓存满时] ，是否 [自动刷新缓存] 。默认值为 [<span class="keyword">true</span>] ，如果设置为 [<span class="keyword">false</span>] ，则缓存被填满时将 [抛出异常] 。</span><br><span class="line">&lt;%@ page outoFlush = <span class="string">"false"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="⑨-isErrorPage-属性"><a href="#⑨-isErrorPage-属性" class="headerlink" title="⑨.isErrorPage 属性"></a>⑨.isErrorPage 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将 [当前JSP页面] 设置成 [错误处理页面] ，以处理另一个JSP页面的错误，也就是 [异常处理] 。这意味着当前JSP页面业务的改变。</span><br><span class="line">&lt;%@ page isErrorPage = <span class="string">"true"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="⑩-errorPage-属性"><a href="#⑩-errorPage-属性" class="headerlink" title="⑩.errorPage 属性"></a>⑩.errorPage 属性</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">该属性用于 [指定] [处理当前JSP页面] [异常错误] [的] [另一个JSP页面] ，[指定的JSP错误页面] 必须 [设置isErrorPage属性为<span class="keyword">true</span>] 。errorPage属性的属性值是一个 [url字符串] 。</span><br><span class="line">&lt;%@ page errorPage = <span class="string">"error/loginErrorPage.jsp"</span> %&gt;</span><br><span class="line"></span><br><span class="line">(注意：如果设置该属性，那么在web.xml文件中定义任何错误页面都将被忽略，而优先使用该属性定义的错误处理页面。)</span><br></pre></td></tr></table></figure><h3 id="2-include-指令"><a href="#2-include-指令" class="headerlink" title="2.include 指令"></a>2.include 指令</h3><p>通过该指令可以在 [一个JSP页面] 中 [包含] [另一个JSP页面] 。不过该指令是 [静态包含]，也就是说呗包含文件中所有内容会被原样包含到该JSP页面中，即使被包含文件中有JSP代码，在包含时也不会被编译执行。[不能] 有 [相同名称] 的 [变量] 。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ include file = <span class="string">"path"</span> %&gt;</span><br></pre></td></tr></table></figure><h3 id="3-taglib-指令"><a href="#3-taglib-指令" class="headerlink" title="3.taglib 指令"></a>3.taglib 指令</h3><p>标识声明该页面中所有使用的标签库，同时引用标签库，并指定标签的前缀。在页面中引用标签库中的标签后，就可以通过 [前缀] 来 [引用] [标签库中] 的 [标签] 。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix = <span class="string">"tagPrefix"</span> uri = <span class="string">"tagURL"</span> %&gt;</span><br><span class="line"></span><br><span class="line">*prefix：指定标签的前缀。该标签不能命名为jsp，jspx，java，javax，sun，servlet和sunw。</span><br><span class="line">*uri：指定 [标签库文件] 的 [存放位置] 。</span><br></pre></td></tr></table></figure><h2 id="二-脚本标识"><a href="#二-脚本标识" class="headerlink" title="二. 脚本标识"></a>二. 脚本标识</h2><h3 id="1-JSP表达式"><a href="#1-JSP表达式" class="headerlink" title="1.JSP表达式"></a>1.JSP表达式</h3><p>JSP表达式用于 [向页面] 中 [输出信息] ，其语法格式如下：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= 表达式 %&gt;</span><br><span class="line"></span><br><span class="line">*表达式：可以是任何java语言的完整表达式。该表达式的 [最终] 运算 [结果] 将 [被] [转换成] [字符串] 。</span><br><span class="line"></span><br><span class="line">(注意：<span class="string">"&lt;%"</span> 与 <span class="string">"="</span> 之间不可以有空格，但是<span class="string">"="</span>与其后面的表达式之间可以有空格)。</span><br></pre></td></tr></table></figure><h3 id="2-声明标识"><a href="#2-声明标识" class="headerlink" title="2.声明标识"></a>2.声明标识</h3><p>[定义] [全局] 的 [变量] 或 [方法] 。</p><p>生命周期：从 [创建开始] 到 [服务器关闭结束] 。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%! 声明变量或方法的代码 %&gt;</span><br><span class="line"></span><br><span class="line">(注意：<span class="string">"&lt;%"</span> 与 <span class="string">"!"</span> 之间不可以有空格，但是<span class="string">"="</span>与其后面的表达式之间可以有空格。另外，<span class="string">"&lt;%!"</span> 与 <span class="string">"%&gt;"</span> 可以不在同一行)</span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">int</span> number = <span class="number">0</span>;    <span class="comment">//定义全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">()</span></span>&#123;       <span class="comment">//声明全局方法</span></span><br><span class="line">    number++;      <span class="comment">//累加number</span></span><br><span class="line">        <span class="keyword">return</span> number; <span class="comment">//返回number的值</span></span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">（通过上面的代码声明全局变量和全局方法后，在后面如果通过&lt;%= count() %&gt;调用全局方法，则每次刷新页面，都会输出前一次值+<span class="number">1</span>的值。）</span><br></pre></td></tr></table></figure><h3 id="3-代码片段"><a href="#3-代码片段" class="headerlink" title="3.代码片段"></a>3.代码片段</h3><p>生命周期：[页面关闭后] 就会销毁。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% Java代码或脚本代码 %&gt;</span><br></pre></td></tr></table></figure><h2 id="三-JSP注释"><a href="#三-JSP注释" class="headerlink" title="三. JSP注释"></a>三. JSP注释</h2><h3 id="1-隐藏注释"><a href="#1-隐藏注释" class="headerlink" title="1.隐藏注释"></a>1.隐藏注释</h3><p>这种注释不不仅在浏览器中看不到，在查看 [HTML源代码] 也 [看不到] ，所以这种注释的安全性比较高。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- 注释内容 --%&gt;</span><br></pre></td></tr></table></figure><h3 id="2-动态注释"><a href="#2-动态注释" class="headerlink" title="2.动态注释"></a>2.动态注释</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--&lt;%= <span class="keyword">new</span> Date()%&gt;--&gt;</span><br></pre></td></tr></table></figure><h2 id="四-动作标识"><a href="#四-动作标识" class="headerlink" title="四. 动作标识"></a>四. 动作标识</h2><h3 id="1-包含文件标识-jsp-include"><a href="#1-包含文件标识-jsp-include" class="headerlink" title="1.包含文件标识 \jsp:include"></a>1.包含文件标识 \<a href="jsp:include" target="_blank" rel="noopener">jsp:include</a></h3><p>JSP的动作标识\<a href="jsp:include" target="_blank" rel="noopener">jsp:include</a>用于 [向当前页面中] [包含] [其他的文件] 。[被包含的文件] 可以是 [动态文件] ，也可以是 [静态文件] 。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:include page = <span class="string">"url"</span> flush = <span class="string">"false|true"</span>/&gt;</span><br><span class="line">或</span><br><span class="line">&lt;jsp:include page = <span class="string">"url"</span> flush = <span class="string">"false|true"</span>&gt;</span><br><span class="line">    子动作标识&lt;jsp:param&gt;</span><br><span class="line">&lt;/jsp:include&gt;</span><br><span class="line">    </span><br><span class="line">子动作标识&lt;jsp:param&gt;:用于向被包含的 [动态页面] 中 [传递参数]。</span><br><span class="line"></span><br><span class="line">&lt;jsp:include&gt; 标识对包含的 [动态文件] 和 [静态文件] 的 [处理方式] 是 [不同的] 。</span><br><span class="line">静态文件：则页面执行后，在使用了该标识的位置将会 [输出] 这个 [文件的内容] 。</span><br><span class="line">动态文件：那么JSP编译器将 [编译并执行] 这个 [文件] 。</span><br><span class="line"></span><br><span class="line">&lt;jsp:include&gt; 标识会 [识别] 文件的 [类型] ，[而不是] 通过 [文件的名称] 来 [判断] 该文件是静态的还是动态的。</span><br></pre></td></tr></table></figure><p>在应用\<a href="jsp:inlcude" target="_blank" rel="noopener">jsp:inlcude</a>标识进行文件包含时，为了使整个页面的层次结构不发生冲突，建议在被包含页面中将\<html>,\<body>等标记删除。</body></html></p><h4 id="include指令-与-jsp-include动作标识"><a href="#include指令-与-jsp-include动作标识" class="headerlink" title="include指令 与 \jsp:include动作标识"></a>include指令 与 \<a href="jsp:include" target="_blank" rel="noopener">jsp:include</a>动作标识</h4><p>①</p><p> [include指令] [通过file属性] 指定被包含的文件，并且file属性 [不支持] [任何表达式] 。</p><p> [\<a href="jsp:include" target="_blank" rel="noopener">jsp:include</a>动作标识] [通过page属性] 指定被包含的文件，而且page属性 [支持JSP表达式] 。</p><p>②</p><p>使用include指令时，被包含文件内容会原封不动地插入到包含页中，然后JSP编译器再将合成后的文件最终编译成一个java文件；</p><p>使用\<a href="jsp:include" target="_blank" rel="noopener">jsp:include</a>动作标识包含文件时，当该标识被执行时，程序会将请求 [转发]（注意是转发，而不是请求重定向）到被包含的页面，并将执行结果 [输出] 到浏览器中，然后 [返回] 包含页，继续  [执行] 后面的代码。因为服务器执行的是 [多个] 文件，所以JSP编译器会 [分别] 对这些文件进行编译。</p><p>③</p><p>在应用include指令包含文件时，由于被包含的文件最终会 [生成一个文件] ，所以在被包含文件，包含文件中 [不能] 有 [重名] 的变量或方法。</p><p>在应用\<a href="jsp:include" target="_blank" rel="noopener">jsp:include</a>动作标识时，由于每个文件时 [单独编译] 的，所以在被包含文件和包含文件中 [重名] 的变量和方法是 [不相冲突] 的。</p><h3 id="2-请求转发标识-jsp-forward"><a href="#2-请求转发标识-jsp-forward" class="headerlink" title="2.请求转发标识 \jsp:forward"></a>2.请求转发标识 \<a href="jsp:forward" target="_blank" rel="noopener">jsp:forward</a></h3><p>通过\<a href="jsp:forward" target="_blank" rel="noopener">jsp:forward</a>动作标识可以 [将请求转发] 到 [其他的Web资源] ，例如：另一个 [JSP页面] ，[HTML页面] ， [Servlet] 等。执行请求转发后， [当前页面] 将 [不再被执行] ，而是 [去执行] 该标识 [指定] 的 [目标页面] 。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:forward page = <span class="string">"url"</span>/&gt;</span><br><span class="line">或</span><br><span class="line">&lt;jsp:forward page = <span class="string">"url"</span>&gt;</span><br><span class="line">    子动作标识&lt;jsp:param&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br></pre></td></tr></table></figure><h3 id="3-传递参数标识-jsp-param"><a href="#3-传递参数标识-jsp-param" class="headerlink" title="3.传递参数标识 \jsp:param"></a>3.传递参数标识 \<a href="jsp:param" target="_blank" rel="noopener">jsp:param</a></h3><p>JSP的动作标识 \<a href="jsp:param" target="_blank" rel="noopener">jsp:param</a>可以作为其他标识的子标识，用于为其他标识 [传递参数] 。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:param name = <span class="string">"参数名"</span> value=<span class="string">"参数值"</span>\&gt;</span><br><span class="line">    </span><br><span class="line">例如：</span><br><span class="line">&lt;jsp:forward page = <span class="string">"modify.jsp"</span>&gt;</span><br><span class="line">    &lt;jsp:param name = <span class="string">"useid"</span> value = <span class="string">"7"</span>/&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/05/07/JSP%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>最近公共祖先（LCA)</title>
      <link>http://yoursite.com/2019/03/09/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%EF%BC%88LCA%EF%BC%89/</link>
      <guid>http://yoursite.com/2019/03/09/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%EF%BC%88LCA%EF%BC%89/</guid>
      <pubDate>Sat, 09 Mar 2019 12:07:24 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/137/10/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/137/10/thumb.jpg" alt="img"></p><a id="more"></a><p>询问两个节点的公共祖先，先让两个节点走到相同的深度，然后共同往上走。</p><p>也可以用一个数组father[k][v]记录节点v向上走2^k的节点，father[k + 1][v] = father[k][father[k][v]](2^k + 2^k = 2 ^ (k + 1))，然后k从大到小倍增的跳。</p><p>也可以先把dfs序给找出来，而LCA（u，v)就是访问u之后到访问v之间所经过顶点中距离最近的那个。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/09/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%EF%BC%88LCA%EF%BC%89/#disqus_thread</comments>
    </item>
    
    <item>
      <title>不想再 WA 了</title>
      <link>http://yoursite.com/2018/12/30/%E4%B8%8D%E6%83%B3%E5%86%8D%20WA%20%E4%BA%86/</link>
      <guid>http://yoursite.com/2018/12/30/%E4%B8%8D%E6%83%B3%E5%86%8D%20WA%20%E4%BA%86/</guid>
      <pubDate>Sun, 30 Dec 2018 02:14:43 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/137/3/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/137/3/thumb.jpg" alt="img"></p><a id="more"></a><h2 id="不想再-WA-了"><a href="#不想再-WA-了" class="headerlink" title="不想再 WA 了"></a>不想再 WA 了</h2><p>（刚发现没传。还以为传了，尴尬了…)</p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>​    欢迎参加西南民族大学 $2018$ 年校赛。对于你来说，做题 $WA$ 了 是一件很痛苦的事，所以你从现在开始不想再看到有题 $WA$ 了。那么现在给你 $A$ , $C$ , $W$ 三个字符，问组成一个长度为 $n$ （不含 $WA$ ) 的字符串，总共有多少种方案？( $T$ 组数据)</p><h2 id="数据范围："><a href="#数据范围：" class="headerlink" title="数据范围："></a>数据范围：</h2><ul><li>$1 &lt;= T &lt;= 10$ </li><li>$1 &lt;= n &lt;= 10000$</li></ul><h2 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h2><p>$input$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>$output$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">8</span><br></pre></td></tr></table></figure><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p>递推：</p><p>$dp[i][j] : $ 代表以组成长度为 $i$ 并以 $j$ 结尾的字符串时的方案数。</p><p>$1$: 代表以 $A$ 结尾</p><p>$2$: 代表以 $C$ 结尾</p><p>$3$: 代表以 $W$ 结尾</p><p>若第 $i$ 位放 $1$ (A) ：那么 $dp[i][1]$ 只能由以长度为 $i - 1$ 并以 $1$ (A) 和 以 $2$ (C) 结尾的字符串方案数相加得到，因为不能出现 $WA$ 。所以 $dp[i][1] = dp[i - 1][1] + dp[i - 1][2]$</p><p>若第 $i$ 位不放 $1$ (A)：那么就无所顾忌，直接由以长度为 $i - 1$ 并以 $1$ (A) ，以 $2$ (C) 和 以 3 (W) 结尾的字符串方案数相加得到。所以</p><p>$dp[i][2] = dp[i - 1][1] + dp[i - 1][2] + dp[i - 1][3]$ ,<br>$dp[i][3] = dp[i - 1][1] + dp[i - 1][2] + dp[i - 1][3]$  ,</p><p>最后答案：$dp[n][1] + dp[n][2] + dp[n][3]$</p><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">15</span>][<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line">dp[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">dp[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">dp[<span class="number">1</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= <span class="number">10</span>;i++)&#123;</span><br><span class="line">dp[i][<span class="number">1</span>] = dp[i - <span class="number">1</span>][<span class="number">1</span>] + dp[i - <span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">dp[i][<span class="number">2</span>] = dp[i - <span class="number">1</span>][<span class="number">1</span>] + dp[i - <span class="number">1</span>][<span class="number">2</span>] + dp[i - <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">dp[i][<span class="number">3</span>] = dp[i - <span class="number">1</span>][<span class="number">1</span>] + dp[i - <span class="number">1</span>][<span class="number">2</span>] + dp[i - <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">Init();</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n][<span class="number">1</span>] + dp[n][<span class="number">2</span>] + dp[n][<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/12/30/%E4%B8%8D%E6%83%B3%E5%86%8D%20WA%20%E4%BA%86/#disqus_thread</comments>
    </item>
    
    <item>
      <title>分解质因数</title>
      <link>http://yoursite.com/2018/11/20/%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0/</link>
      <guid>http://yoursite.com/2018/11/20/%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0/</guid>
      <pubDate>Tue, 20 Nov 2018 08:14:24 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/70443/1540109889921/thumb_Sun_Oct_21_2018.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/70443/1540109889921/thumb_Sun_Oct_21_2018.jpg" alt="img"></p><a id="more"></a><h2 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h2><p><a href="http://www.cnblogs.com/jiangjing/archive/2013/06/01/3112035.html" target="_blank" rel="noopener">http://www.cnblogs.com/jiangjing/archive/2013/06/01/3112035.html</a></p><p><a href="http://www.cnblogs.com/jiangjing/archive/2013/06/03/3115399.html" target="_blank" rel="noopener">http://www.cnblogs.com/jiangjing/archive/2013/06/03/3115399.html</a></p><h2 id="求一个数的质因子-根号n"><a href="#求一个数的质因子-根号n" class="headerlink" title="求一个数的质因子(根号n):"></a>求一个数的质因子(根号n):</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   __int64 a[<span class="number">100</span>],num,i,n;</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%I64d"</span>,&amp;n)!=EOF)</span><br><span class="line">   &#123;</span><br><span class="line">      num=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line">      &#123; </span><br><span class="line">          <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              a[num++]=i;</span><br><span class="line">              <span class="keyword">while</span>(n%i==<span class="number">0</span>)</span><br><span class="line">                 n=n/i;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(n&gt;<span class="number">1</span>)</span><br><span class="line">         a[num++]=n;</span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num;i++)</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%I64d "</span>,a[i]);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="求多个数的质因子"><a href="#求多个数的质因子" class="headerlink" title="求多个数的质因子:"></a>求多个数的质因子:</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> visited[<span class="number">100010</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;a[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">100010</span>;i++)</span><br><span class="line">       a[i].clear();<span class="comment">//vector的清空</span></span><br><span class="line">    <span class="built_in">memset</span>(visited,<span class="number">0</span>,<span class="keyword">sizeof</span>(visited));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=<span class="number">100000</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(visited[i]==<span class="number">0</span>)<span class="comment">//i是素数这是可以保证的</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[i].push_back(i);</span><br><span class="line">            <span class="keyword">for</span>(j=i+i;j&lt;=<span class="number">100000</span>;j+=i)<span class="comment">//筛选素数，其实这种方法没以前那种素数法快，但是这里用来求一个数的质因子就比较好了</span></span><br><span class="line">            &#123;</span><br><span class="line">                visited[j]=<span class="number">1</span>;</span><br><span class="line">                a[j].push_back(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">50</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d:"</span>,i);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;a[i].size();j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i][j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/11/20/%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Codeforces- 521 - div3 - F2. Pictures with Kittens (hard version)(单调队列优化 + DP)</title>
      <link>http://yoursite.com/2018/11/19/Codeforces-%20521%20-%20div3%20-%20F2.%20Pictures%20with%20Kittens%20(hard%20version)(%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96%20+%20DP)/</link>
      <guid>http://yoursite.com/2018/11/19/Codeforces-%20521%20-%20div3%20-%20F2.%20Pictures%20with%20Kittens%20(hard%20version)(%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96%20+%20DP)/</guid>
      <pubDate>Mon, 19 Nov 2018 15:40:52 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;Codeforces-521-div3-F2-Pictures-with-Kittens-hard-version-单调队列优化-DP&quot;&gt;&lt;a href=&quot;#Codeforces-521-div3-F2-Pictures-with-Kittens-hard-version-单调队列优化-DP&quot; class=&quot;headerlink&quot; title=&quot;Codeforces- 521 - div3 - F2. Pictures with Kittens (hard version)(单调队列优化 + DP)&quot;&gt;&lt;/a&gt;Codeforces- 521 - div3 - F2. Pictures with Kittens (hard version)(单调队列优化 + DP)&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/136/5/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h1 id="Codeforces-521-div3-F2-Pictures-with-Kittens-hard-version-单调队列优化-DP"><a href="#Codeforces-521-div3-F2-Pictures-with-Kittens-hard-version-单调队列优化-DP" class="headerlink" title="Codeforces- 521 - div3 - F2. Pictures with Kittens (hard version)(单调队列优化 + DP)"></a>Codeforces- 521 - div3 - F2. Pictures with Kittens (hard version)(单调队列优化 + DP)</h1><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/136/5/thumb.jpg" alt="img"></p><a id="more"></a><h2 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h2><p><a href="http://www.cnblogs.com/widsom/p/9972681.html" target="_blank" rel="noopener">http://www.cnblogs.com/widsom/p/9972681.html</a></p><h2 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h2><p><a href="http://codeforces.com/contest/1077/problem/F2" target="_blank" rel="noopener">http://codeforces.com/contest/1077/problem/F2</a></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>输入 $n$ $,$ $k$ $,$ $x$ $,$ 在 $n$ 个数里挑选 $x$ 个数，使得任意连续长度为 $k$ 的子序列中至少有一个数是被挑选的数，问挑选数之和最大是多少？如果不能满足条件输出 $-1$ 。</p><h2 id="数据范围："><a href="#数据范围：" class="headerlink" title="数据范围："></a>数据范围：</h2><ul><li>$1 &lt;= n,k,x &lt;= 5000$</li><li>$ 1&lt;=a_i&lt;= 1e9$</li></ul><p>​    </p><h2 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h2><p>$input$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">5 2 3</span><br><span class="line">5 1 3 10 1</span><br><span class="line"></span><br><span class="line">6 1 5</span><br><span class="line">10 30 30 70 10 10</span><br><span class="line"></span><br><span class="line">4 3 1</span><br><span class="line">1 100 1 1</span><br></pre></td></tr></table></figure><p>$output$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">18</span><br><span class="line"></span><br><span class="line">-1</span><br><span class="line"></span><br><span class="line">100</span><br></pre></td></tr></table></figure><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p>单调队列 $dp[i]:$ 挑选 $i$ 个数时，在满足条件下，答案( $second$ ) 和 对应的位置 ( $first$ )</p><h2 id="AC-代码："><a href="#AC-代码：" class="headerlink" title="AC 代码："></a>AC 代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> LL INF = <span class="number">1L</span>L &lt;&lt; <span class="number">60</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">LL a[maxn], tmp[maxn];</span><br><span class="line"><span class="built_in">deque</span>&lt; pair&lt;<span class="keyword">int</span>,LL&gt; &gt; dp[maxn];</span><br><span class="line"><span class="keyword">int</span> n,k,x;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;k,&amp;x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">dp[<span class="number">0</span>].push_back(make_pair(<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= x;j++)&#123;</span><br><span class="line"><span class="keyword">while</span>(!dp[j - <span class="number">1</span>].empty() &amp;&amp; dp[j - <span class="number">1</span>].front().first &lt; i - k) dp[j - <span class="number">1</span>].pop_front(); <span class="comment">// &lt; i - k 的都不能转移到 j </span></span><br><span class="line"><span class="keyword">if</span>(!dp[j - <span class="number">1</span>].empty()) tmp[j] = dp[j - <span class="number">1</span>].front().second + a[i]; <span class="comment">// 这里是选，不选的话保持不变就行，无须转移。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= x;j++)&#123;</span><br><span class="line"><span class="keyword">while</span>(!dp[j].empty() &amp;&amp; tmp[j] &gt;= dp[j].back().second) dp[j].pop_back();</span><br><span class="line"><span class="keyword">if</span>(tmp[j]) dp[j].push_back(make_pair(i,tmp[j]));</span><br><span class="line">tmp[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(!dp[x].empty() &amp;&amp; dp[x].front().first &lt;= n - k) dp[x].pop_front();</span><br><span class="line"><span class="keyword">if</span>(!dp[x].empty()) ans = dp[x].front().second;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/11/19/Codeforces-%20521%20-%20div3%20-%20F2.%20Pictures%20with%20Kittens%20(hard%20version)(%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96%20+%20DP)/#disqus_thread</comments>
    </item>
    
    <item>
      <title>莫队算法模板</title>
      <link>http://yoursite.com/2018/11/17/%E8%8E%AB%E9%98%9F%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/</link>
      <guid>http://yoursite.com/2018/11/17/%E8%8E%AB%E9%98%9F%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/</guid>
      <pubDate>Sat, 17 Nov 2018 13:53:07 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/121/4/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/121/4/thumb.jpg" alt="img"></p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 复杂度：O( n^(1.5) )</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pos[maxn];</span><br><span class="line"><span class="keyword">int</span> L,R;</span><br><span class="line">LL ans[maxn],Ans;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NODE</span>&#123;</span></span><br><span class="line">    LL l,r;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">&#125;Q[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(NODE x, NODE y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(pos[x.l] == pos[y.l]) <span class="keyword">return</span> x.r &lt; y.r;</span><br><span class="line">    <span class="keyword">return</span> pos[x.l] &lt; pos[y.l];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;Q[i].l,&amp;Q[i].r); <span class="comment">// 离线询问</span></span><br><span class="line">        Q[i].id = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> siz = <span class="built_in">sqrt</span>(<span class="number">100000</span>); <span class="comment">// 分块</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">100000</span>;i++) pos[i] = i / siz;</span><br><span class="line">    sort(Q + <span class="number">1</span>,Q + <span class="number">1</span> + n,cmp);</span><br><span class="line"></span><br><span class="line">    L = <span class="number">0</span>, R = <span class="number">0</span>, Ans = <span class="number">1L</span>L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(L &lt; Q[i].l)&#123;</span><br><span class="line">        <span class="comment">/* 进行操作 */</span></span><br><span class="line">            L++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(L &gt; Q[i].l)&#123;</span><br><span class="line">            L--;</span><br><span class="line">        <span class="comment">/* 进行操作 */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(R &lt; Q[i].r)&#123;</span><br><span class="line">            R++;</span><br><span class="line">        <span class="comment">/* 进行操作 */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(R &gt; Q[i].r)&#123;</span><br><span class="line">        <span class="comment">/* 进行操作 */</span></span><br><span class="line">            R--;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[Q[i].id] = Ans; <span class="comment">// 记录答案</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans[i]); <span class="comment">// 输出答案</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/11/17/%E8%8E%AB%E9%98%9F%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/#disqus_thread</comments>
    </item>
    
    <item>
      <title>求组合数(O(n))</title>
      <link>http://yoursite.com/2018/11/17/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0(O(n))/</link>
      <guid>http://yoursite.com/2018/11/17/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0(O(n))/</guid>
      <pubDate>Sat, 17 Nov 2018 13:23:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/121/3/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/121/3/thumb.jpg" alt="img"></p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> LL mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line">LL inv[maxn],fac[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123; <span class="comment">// O(n)  预处理, O(1) 访问</span></span><br><span class="line">    fac[<span class="number">1</span>] = fac[<span class="number">0</span>] = <span class="number">1L</span>L;</span><br><span class="line">    inv[<span class="number">1</span>] = inv[<span class="number">0</span>] = <span class="number">1L</span>L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt; maxn - <span class="number">1</span>;i++)&#123;</span><br><span class="line">        fac[i] = fac[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">        inv[i] = (mod - mod / i) * inv[mod % i] % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt; maxn - <span class="number">1</span>;i++)&#123;</span><br><span class="line">        inv[i] = inv[i - <span class="number">1</span>] * inv[i] % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y &gt; x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> fac[x] * inv[y] % mod * inv[x - y] % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,C(<span class="number">6</span>,<span class="number">2</span>));   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/11/17/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0(O(n))/#disqus_thread</comments>
    </item>
    
    <item>
      <title>后缀数组模板(O(n))</title>
      <link>http://yoursite.com/2018/11/17/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF(O(n))/</link>
      <guid>http://yoursite.com/2018/11/17/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF(O(n))/</guid>
      <pubDate>Sat, 17 Nov 2018 12:51:46 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/121/2/thumb.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/121/2/thumb.jpg" alt="img"></p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> y[maxn],x[maxn],c[maxn],sa[maxn],rk[maxn],height[maxn],wt[<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> len,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_SA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= len;i++) ++c[x[i] = s[i]];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= m;i++) c[i] += c[i - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = len;i &gt;= <span class="number">1</span>;i--) sa[c[x[i]]--] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= len;k &lt;&lt;= <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = len - k + <span class="number">1</span>;i &lt;= len;++i) y[++num] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= len;i++) <span class="keyword">if</span> (sa[i] &gt; k) y[++num] = sa[i] - k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++) c[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= len;i++) ++c[x[i]];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= m;i++) c[i] += c[i - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = len;i &gt;= <span class="number">1</span>;i--) sa[c[x[y[i]]]--] = y[i], y[i] = <span class="number">0</span>;</span><br><span class="line">swap(x,y);</span><br><span class="line">x[sa[<span class="number">1</span>]] = <span class="number">1</span>;</span><br><span class="line">num = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= len;i++)</span><br><span class="line">x[sa[i]] = (y[sa[i]] == y[sa[i - <span class="number">1</span>]] &amp;&amp; y[sa[i] + k] == y[sa[i - <span class="number">1</span>] + k]) ? num : ++num;</span><br><span class="line"><span class="keyword">if</span>(num == len) <span class="keyword">break</span>;</span><br><span class="line">m = num;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_height</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= len;i++) rk[sa[i]] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(rk[i] == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(k) --k;</span><br><span class="line"><span class="keyword">int</span> j = sa[rk[i] - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span>(j + k &lt;= len &amp;&amp; i + k &lt;= len &amp;&amp; s[i + k] == s[j + k]) ++k;</span><br><span class="line">height[rk[i]] = k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s + <span class="number">1</span>);</span><br><span class="line">len = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</span><br><span class="line">m = <span class="number">122</span>;</span><br><span class="line">get_SA();</span><br><span class="line">get_height();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= len;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,sa[i]); <span class="comment">// sa[i] : 以第 i 位开始后缀按字典序从小到大排序后，排在第 sa[i] 个。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= len;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,height[i]); <span class="comment">// height[i] : 排在第 i 个的后缀 与 排在第 i + 1 个的后缀的最长公共前缀。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">① ② ③ ④ ⑤</span></span><br><span class="line"><span class="comment">a b a b a</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">sa:     5 3 1 4 2    </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">height: 0 1 3 0 2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">sa            height</span></span><br><span class="line"><span class="comment">              0</span></span><br><span class="line"><span class="comment">⑤ : a</span></span><br><span class="line"><span class="comment">              1</span></span><br><span class="line"><span class="comment">③ : aba</span></span><br><span class="line"><span class="comment">              3</span></span><br><span class="line"><span class="comment">① : ababa</span></span><br><span class="line"><span class="comment">              0</span></span><br><span class="line"><span class="comment">④ : ba</span></span><br><span class="line"><span class="comment">              2</span></span><br><span class="line"><span class="comment">② : baba</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">/</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/11/17/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF(O(n))/#disqus_thread</comments>
    </item>
    
    <item>
      <title>BZOJ-1036-树的统计Count(树链剖分+线段树模板题)</title>
      <link>http://yoursite.com/2018/11/15/BZOJ-1036-%E6%A0%91%E7%9A%84%E7%BB%9F%E8%AE%A1Count(%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86+%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF%E9%A2%98)/</link>
      <guid>http://yoursite.com/2018/11/15/BZOJ-1036-%E6%A0%91%E7%9A%84%E7%BB%9F%E8%AE%A1Count(%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86+%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF%E9%A2%98)/</guid>
      <pubDate>Thu, 15 Nov 2018 15:32:40 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/39355/1541250861074/thumb_Sat_Nov_03_2018.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/palette/39355/1541250861074/thumb_Sat_Nov_03_2018.jpg" alt="img"></p><a id="more"></a><h2 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h2><p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1036" target="_blank" rel="noopener">https://www.lydsy.com/JudgeOnline/problem.php?id=1036</a></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>一棵树上有 $n$ 个节点，编号分别为 $1$ 到 $n$ ，每个节点都有一个权值 $w$ 。我们将以下面的形式来要求你对这棵树完成一些操作： </p><ul><li><p>$CHANGE$ $u$ $t$ : 把结点 $u$ 的权值改为 $t$ </p></li><li><p>$QMAX$ $u$ $v$ : 询问从点 $u$ 到点 $v$ 的路径上的节点的最大权值 </p></li><li><p>$QSUM$ $u$ $v$ : 询问从点 $u$ 到点 $v$ 的路径上的节点的权值和 </p><p>注意：从点 $u$ 到点 $v$ 的路径上的节点包括 $u$ 和 $v$ 本身</p></li></ul><h2 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h2><p>$input$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">4 1</span><br><span class="line">4 2 1 3</span><br><span class="line">12</span><br><span class="line">QMAX 3 4</span><br><span class="line">QMAX 3 3</span><br><span class="line">QMAX 3 2</span><br><span class="line">QMAX 2 3</span><br><span class="line">QSUM 3 4</span><br><span class="line">QSUM 2 1</span><br><span class="line">CHANGE 1 5</span><br><span class="line">QMAX 3 4</span><br><span class="line">CHANGE 3 6</span><br><span class="line">QMAX 3 4</span><br><span class="line">QMAX 2 4</span><br><span class="line">QSUM 3 4</span><br></pre></td></tr></table></figure><p>$output$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">2</span><br><span class="line">10</span><br><span class="line">6</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">5</span><br><span class="line">16</span><br></pre></td></tr></table></figure><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,rt &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid + 1,r,rt &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1000000000</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> son[maxn],deep[maxn],siz[maxn],f[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[<span class="number">2</span> * maxn],other[<span class="number">2</span> * maxn],last[maxn];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> n,q,num;</span><br><span class="line"><span class="keyword">int</span> all = <span class="number">-1</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> SUM[maxn * <span class="number">4</span>],MAX[maxn * <span class="number">4</span>];</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NODE</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> w,id,top;</span><br><span class="line">&#125;node[maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    pre[++all] = last[x];</span><br><span class="line">    last[x] = all;</span><br><span class="line">    other[all] = y;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">PushUP</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    MAX[rt] = max(MAX[rt &lt;&lt; <span class="number">1</span>],MAX[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">    SUM[rt] = SUM[rt &lt;&lt; <span class="number">1</span>] + SUM[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> change,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">// p：要更新的节点编号。 change：要改变的值。 [l,r]：整个大区间。 rt：当前节点。</span></span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        MAX[rt] = change;</span><br><span class="line">        SUM[rt] = change; <span class="comment">// 如果要加值，就 "+=" </span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(p &lt;= mid) update(p,change,lson);</span><br><span class="line">    <span class="keyword">else</span> update(p,change,rson);</span><br><span class="line">    PushUP(rt);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> op,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">// [L,R]：询问的区间。 [l,r]：整个大区间。 rt：当前节点。</span></span><br><span class="line">    <span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) <span class="keyword">return</span> MAX[rt];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) <span class="keyword">return</span> SUM[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ret;</span><br><span class="line">    <span class="keyword">if</span>(op == <span class="number">1</span>) ret = -inf;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= mid)&#123;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) ret = max(ret,query(op,L,R,lson));</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) ret += query(op,L,R,lson);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(R &gt; mid)&#123;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) ret = max(ret,query(op,L,R,rson));</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) ret += query(op,L,R,rson);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(last,<span class="number">-1</span>,<span class="keyword">sizeof</span>(last));</span><br><span class="line">    num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs1</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    siz[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> dt = last[u];</span><br><span class="line">    <span class="keyword">while</span>(dt !=- <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> v = other[dt];</span><br><span class="line">        <span class="keyword">if</span>(v != f[u])&#123;</span><br><span class="line">            deep[v] = deep[u] + <span class="number">1</span>;</span><br><span class="line">            f[v] = u;</span><br><span class="line">            Dfs1(v);</span><br><span class="line">            siz[u] += siz[v];</span><br><span class="line">            <span class="keyword">if</span>(siz[v] &gt; tmp)&#123;</span><br><span class="line">                son[u] = v;</span><br><span class="line">                tmp = siz[v];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dt = pre[dt];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa,<span class="keyword">int</span> top)</span></span>&#123;</span><br><span class="line">    num++;</span><br><span class="line">    node[u].id = num;</span><br><span class="line">    node[u].top = top;</span><br><span class="line">    <span class="keyword">if</span>(!son[u]) <span class="keyword">return</span>;</span><br><span class="line">    Dfs2(son[u],u,top);</span><br><span class="line">    <span class="keyword">int</span> dt = last[u];</span><br><span class="line">    <span class="keyword">while</span>(dt != <span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> v = other[dt];</span><br><span class="line">        <span class="keyword">if</span>(v != fa &amp;&amp; v != son[u])&#123;</span><br><span class="line">            Dfs2(v,u,v);</span><br><span class="line">        &#125;</span><br><span class="line">        dt = pre[dt];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Get</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> op)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="keyword">if</span>(op == <span class="number">1</span>) ans = -inf;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(node[u].top != node[v].top)&#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[node[u].top] &lt; deep[node[v].top]) swap(u,v);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) ans = max(ans,query(<span class="number">1</span>,node[node[u].top].id,node[u].id,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) ans += query(<span class="number">2</span>,node[node[u].top].id,node[u].id,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        u = f[node[u].top];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(node[u].id &gt; node[v].id) swap(u,v);</span><br><span class="line">    <span class="keyword">if</span>(op == <span class="number">1</span>) ans = max(ans,query(<span class="number">1</span>,node[u].id,node[v].id,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) ans += query(<span class="number">2</span>,node[u].id,node[v].id,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    Init();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> u,v;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">        Build(u,v);</span><br><span class="line">        Build(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;node[i].w);</span><br><span class="line">    Dfs1(<span class="number">1</span>);</span><br><span class="line">    Dfs2(<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        update(node[i].id,node[i].w,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= q;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> u,v,t;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">3</span>] == <span class="string">'X'</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Get(u,v,<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[<span class="number">3</span>] == <span class="string">'M'</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Get(u,v,<span class="number">2</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[<span class="number">3</span>] == <span class="string">'N'</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;t);</span><br><span class="line">            update(node[u].id,t,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/11/15/BZOJ-1036-%E6%A0%91%E7%9A%84%E7%BB%9F%E8%AE%A1Count(%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86+%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF%E9%A2%98)/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
